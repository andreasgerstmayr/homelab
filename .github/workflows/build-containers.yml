name: Build containers

on:
  push:
    branches: [main]
    paths:
    - 'containers/**'
  schedule:
    - cron: '0 0 * * SAT'

jobs:
  build-caddy:
    env:
      container: caddy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      run: echo VERSION=$(grep -oP "caddy:\K.+" containers/${{ env.container }}/Dockerfile | tail -n1) >> $GITHUB_ENV

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/${{ env.container }}
        tags: ${{ env.VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: containers/${{ env.container }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-nextcloud:
    env:
      container: nextcloud
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      run: echo VERSION=$(grep -oP "nextcloud:\K.+" containers/${{ env.container }}/Dockerfile) >> $GITHUB_ENV

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}/${{ env.container }}
        tags: ${{ env.VERSION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: containers/${{ env.container }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
